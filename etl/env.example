# Riot Games API Configuration
RIOT_API_KEY=your-riot-api-key-here

# Google Cloud Storage Configuration
# Project ID for your Google Cloud project
GCLOUD_PROJECT_ID=your-gcp-project-id

# GCS bucket name where files will be uploaded
GCLOUD_BUCKET=your-gcs-bucket-name

# Service Account Configuration (for create_service_account.py)
# These environment variables are used to generate service-account.json
# Copy values from your downloaded service account JSON file

# Required fields
GCLOUD_TYPE=service_account
GCLOUD_PRIVATE_KEY_ID=your-private-key-id
GCLOUD_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY_CONTENT_HERE\n-----END PRIVATE KEY-----\n"
GCLOUD_CLIENT_EMAIL=your-service-account@your-project.iam.gserviceaccount.com
GCLOUD_CLIENT_ID=your-client-id
GCLOUD_AUTH_URI=https://accounts.google.com/o/oauth2/auth
GCLOUD_TOKEN_URI=https://oauth2.googleapis.com/token
GCLOUD_AUTH_PROVIDER_X509_CERT_URL=https://www.googleapis.com/oauth2/v1/certs
GCLOUD_CLIENT_X509_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/your-service-account%40your-project.iam.gserviceaccount.com

# Optional fields
GCLOUD_UNIVERSE_DOMAIN=googleapis.com

# Path for generated service account file (optional)
# GCLOUD_CREDENTIALS_PATH=service-account.json

# Alternative: Use Application Default Credentials (ADC) instead of service account
# If using ADC, comment out all GCLOUD_* variables above and run:
# gcloud auth application-default login 